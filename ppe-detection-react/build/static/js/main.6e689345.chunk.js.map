{"version":3,"sources":["pages/HomePage/HomePage.jsx","pages/Detection/Detection.jsx","App.jsx","serviceWorker.js","index.js","image/construction.png","image/collaboration.svg","image/logistics.svg","image/ppe.png"],"names":["HomePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cards","question","answer","react_default","a","createElement","href","AOS","init","duration","easing","className","data-aos","PlayArrow_default","src","construction","logistics","collaboration","id","Accordion","defaultActiveKey","map","card","index","Card","key","data-aos-delay","Toggle","as","variant","eventKey","HelpOutline_default","ExpandMore_default","Collapse","Body","React","Component","tf","require","classes","item","color","helmet","vest","MAX_HEIGHT","window","innerHeight","toast","configure","Detection","videoRef","createRef","canvasRef","model","run","width","height","webcamStart","helmetExistence","vestExistence","hasDetected","help","stopModel","bind","assertThisInitialized","startModel","_this2","navigator","mediaDevices","getUserMedia","webCamPromise","audio","video","facingMode","then","stream","ratio","getTracks","getSettings","setState","current","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","loadGraphModel","credentials","mode","all","values","detectObjects","catch","error","console","stop","document","getElementById","start","style","display","tfImg","browser","fromPixels","smallImg","image","resizeBilinear","resized","cast","tf4d","tensor4d","Array","from","dataSync","executeAsync","image_tensor","predictions","renderPredictions","dispose","requestAnimationFrame","_this3","title","description","_this4","rightOptions","closeOnClick","closeButton","pauseOnFocusLoss","pauseOnHover","onOpen","audioRight","play","setTimeout","pause","success","_ref","closeToast","paddingLeft","predictionBoxes","totalPredictions","predictionClasses","predictionScores","_this5","ctx","getContext","clearRect","canvas","i","minY","minX","maxY","maxX","score","predictionString","toFixed","hasOwnProperty","drawBox","text","beginPath","rect","lineWidth","strokeStyle","stroke","textBaseline","font","fillStyle","textWidth","measureText","textHeight","parseInt","fillRect","shadowColor","fillText","_this6","loop","ref","r","type","react_toastify_esm","autoPlay","playsInline","muted","react_loader_default","loaded","options","PauseOutlined_default","onClick","data-tip","data-for","index_es","place","effect","sweetalert_react_min_default","show","confirmButtonColor","html","onConfirm","App","_Component","apply","arguments","inherits","createClass","value","react_router_dom","react_router","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App","log","serviceWorker","ready","registration","unregister","message","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6e689345.chunk.js","sourcesContent":["// Design inspired from Appland Bootstrap: https://bootstrapmade.com/demo/Appland/\nimport React from \"react\";\nimport {Accordion, Card} from 'react-bootstrap';\nimport AOS from 'aos';\n\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport construction from '../../image/construction.png';\nimport collaboration from '../../image/collaboration.svg';\nimport logistics from '../../image/logistics.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'aos/dist/aos.css';\nimport \"./HomePage.css\";\n\nclass HomePage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      // Used to display FAQs\n      cards: [{\n        question: 'How do we use the project?',\n        answer: <div>To start the project, you can either click on the \"Start Detection\" button at the top of the page, or the play button on the bottom right section of the screen. <br /><br />Once you're in the program, please make sure to allow camera access to the browser. Test it out by wearing a hard-hat and a high-vis vest and let it start!</div>\n      },{\n        question: 'Which PPE is being detected by the model?',\n        answer: 'We have trained our model to only detect hard-hats and high-vis vests for now. However, you can easily substitute your own machine-learning model if you wish to identify more items!'\n      },\n      {\n        question: 'What technology was used for this project?',\n        answer: 'Our model is first trained with Tensorflow. It is then converted into a Tensorflow.JS format and hosted on a website created using React. '\n      },\n      {\n        question: 'What can we do if we\\'d like to modify the code for our use?',\n        answer: <div>You can obtain the <a href=\"https://github.com/candicerimba/ppe-detection-react\">source code</a> and run it on your local machine.</div>\n      },\n    ]\n   };\n  }\n\n  componentDidMount() {\n    // When component loaded, initialise AOS (Animate on Scroll)\n    AOS.init({\n      duration: 800,\n      easing: \"ease-in-out\",\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"content\"> \n          <a href=\"/detection\" className=\"detection-button\" data-aos=\"fade-up\"><PlayArrowIcon className=\"home-play-button\"/></a>\n          <div className=\"header-bar\">\n                <div className=\"header-text\" data-aos=\"fade-up\">\n                    <div className=\"header-title\">Show Me Your PPE</div>\n                    <div className=\"header-subtitle\">Improving workplace safety through machine learning</div>\n                    <div className=\"start-btn-bar\"><a className=\"start-btn\" href=\"/detection\">Start Detection</a></div>\n                </div>\n                <img src={construction} className=\"header-image\" data-aos=\"fade-left\"/>\n            </div>\n            <div className=\"info-bar\" data-aos=\"fade-right\">\n              <img src={logistics} className=\"data-image left\"/>\n              <div className=\"info-text left\">\n                <div className=\"info-title\">A Dangerous Problem</div>\n                <div className=\"info-description\">\n                  In the manufacturing industry, casualties and accidents happen in workplaces every year.  \n                  <br /><br /><i>Personal Protective Equipment (PPE)</i> like a helmet (hard-hat), safety-harness, and goggles play a very important role in ensuring the safety of workers. \n                  These equipment are critical to protect people from casualties and accidents.\n                  <br /><br />However, due to the negligence of the workers and their supervisors, workplace accidents occuring from a lack of proper equipment still occur. Supervisors often don't monitor workplace safety consistently because such tasks can be seen as cumbersome.</div>\n              </div>            \n            </div>\n            <div className=\"info-bar\" data-aos=\"fade-left\">\n              <img src={collaboration} id=\"collaboration-pic\" className=\"data-image right\"/>\n              <div className=\"info-text right\">\n                <div className=\"info-title\">Our Project</div>\n                <div className=\"info-description\">\n                  To combat this problem, we created a system backed by a trained machine learning model to automatically detect the use of correct PPE. \n                  <br /><br />This project aims to ensure that workers are wearing proper PPE before they enter the workplace. It can assist supervisors to monitor workers effectively by providing them with real-time alerts, without the need to be on-site all the time.\n                  <br /><br />By developing this project, we hope that this eases the supervisors' burden of constant workplace monitoring, and allow them to focus on other aspects of workplace safety.\n                </div>\n              </div>\n            </div>\n            <div className=\"frequently-asked\">\n                <div className=\"frequently-asked-title\" data-aos=\"fade-up\">Frequently Asked Questions</div> \n                <div className=\"frequently-asked-description\" data-aos=\"fade-up\">You can know more about our project through this list of FAQs.</div>           \n                <Accordion defaultActiveKey=\"0\">\n                  {this.state.cards.map((card, index)=>{return(\n                  <Card key={index} className=\"frequently-asked-container\" data-aos=\"fade-up\" data-aos-delay={(index + 1) * 100}>\n                    <Accordion.Toggle as={Card} variant=\"link\" eventKey={index} className=\"frequently-asked-header\">\n                    <div className=\"q-icon-container left\"><HelpOutlineIcon className=\"q-icon\"/></div>\n                    <div className=\"question-text left\">{card.question}</div>\n                    <div className=\"q-icon-container right\"><ExpandMoreIcon className=\"q-icon\"/></div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={index}>\n                      <Card.Body className=\"frequently-asked-answer\">{card.answer}</Card.Body>\n                    </Accordion.Collapse>\n                  </Card>)})}\n                </Accordion>\n               \n              </div>\n            </div>\n    );\n  }\n}\n\nexport default HomePage;","// DEMO: https://codesandbox.io/s/z364noozrm\nimport React from \"react\";\nimport Loader from 'react-loader';\nimport ReactTooltip from 'react-tooltip';\nimport PauseOutlinedIcon from '@material-ui/icons/PauseOutlined';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { ToastContainer, toast } from 'react-toastify';  \nimport SweetAlert from 'sweetalert2-react';\n\nimport logo from '../../image/ppe.png';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./Detection.css\";\n\nconst tf = require(\"@tensorflow/tfjs\");\n//const tfn = require(\"@tensorflow/tfjs-node\");\n// Detection classes of the model\n// item: Name of the item\n// color: the color that should be used to draw it\n// helmet/vest: true if it is a helmet/vest, false if it is not a helmet/vest \nconst classes = [\n  {item: \"helmet\", color: \"#F8962B\", helmet: true}, \n  {item:\"no helmet\", color:\"#FE0000\", helmet: false}, \n  {item: \"vest\", color: \"#22EE5B\", vest: true},\n  {item: \"no vest\", color: \"#51C1B1\", vest: false}];\n\nconst MAX_HEIGHT = 0.80 * window.innerHeight;\n\ntoast.configure();\n\nclass Detection extends React.Component {\n  videoRef = React.createRef();\n  canvasRef = React.createRef();\n\n  constructor(props){\n    super(props);\n    this.state = {\n      model: null,\n      run: false,\n      width: 640,\n      height: 480,\n      webcamStart: false,\n      helmetExistence: false,\n      vestExistence: false,\n      hasDetected: false,\n      help: false,\n    }\n    this.stopModel = this.stopModel.bind(this);\n    this.startModel = this.startModel.bind(this);\n  }\n\n  componentDidMount() {\n    // Obtains the user's camera stream.\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\"\n          }\n        })\n        .then(stream => {\n          window.stream = stream;\n          // Find ratio to ensure height of camera stream displayed cannot go over MAX_HEIGHT (80% of the full screen height)\n          const ratio = MAX_HEIGHT / stream.getTracks()[0].getSettings().height;\n          this.setState({\n            width: stream.getTracks()[0].getSettings().width * ratio,\n            height: stream.getTracks()[0].getSettings().height * ratio,\n          });\n          this.videoRef.current.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            this.videoRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        });\n      \n      // Load the model file from the host\n      \n      const modelPromise = tf.loadGraphModel('http://192.168.0.172/model.json',\n      {\n        credentials: 'include',\n        mode: 'no-cors', // no-cors, *cors, same-origin\n      }).then((model)=>{\n        this.setState({\n          // Save the loaded model into state\n          model: model,\n          run: true,\n        })\n        //model.save('downloads://my-model');\n      });\n\n      // Obtain the loaded model and the camera stream, if done, can start detecting objects\n      Promise.all([modelPromise, webCamPromise])\n        .then(values => {\n          this.detectObjects();\n        })\n        .catch(error => {\n          console.error(error);\n        });\n   }\n  }\n\n  // Run when pause button is clicked\n  stopModel(){\n    this.setState({run: false});\n    const stop = document.getElementById(\"stop-btn\");\n    const start =  document.getElementById(\"start-btn\");\n    if (stop) stop.style.display = 'none';\n    if (start) start.style.display = 'inline-block';\n  }\n\n  // Run when play button is clicked\n  startModel(){\n    this.setState({run: true});\n    const stop = document.getElementById(\"stop-btn\");\n    const start =  document.getElementById(\"start-btn\");\n    if (stop) stop.style.display = 'inline-block';\n    if (start) start.style.display = 'none';\n  }\n\n  async detectObjects () {\n    if (this.state.model === null) return;  // If model isn't even loaded yet, don't try to detect any object\n    \n    // Only go through with detection when the model is running\n    if (this.state.run) {                   \n      // Obtain all the predictions, and call a function to draw them\n      const tfImg = tf.browser.fromPixels(this.videoRef.current);\n      const smallImg = tf.image.resizeBilinear(tfImg, [300, 300]); // 600, 450\n      const resized = tf.cast(smallImg, 'float32');\n      const tf4d = tf.tensor4d(Array.from(resized.dataSync()), [1, 300, 300, 3], 'int32'); // 600, 450\n      let predictions = await this.state.model.executeAsync({ image_tensor: tf4d }, ['detection_boxes', 'num_detections', 'detection_classes', 'detection_scores']);\n      \n      this.renderPredictions(predictions[0].dataSync(), predictions[1].dataSync(), predictions[2].dataSync(), predictions[3].dataSync())\n      tfImg.dispose();\n      smallImg.dispose();\n      resized.dispose();\n      tf4d.dispose();\n    }\n\n    // Keep calling itself to continue object detection \n    requestAnimationFrame(() => {\n      this.detectObjects()\n    })\n  }\n\n  // Creates alert with title and description as arguments\n  toast(title, description){\n    const text = ({closeToast}) => {return (\n      <div style={{paddingLeft: '10%'}}>\n        <b>{title}</b><br/>\n        {description}\n      </div>\n    )}\n\n    const rightOptions = {\n      closeOnClick: false,\n      closeButton: false,\n      pauseOnFocusLoss: false,\n      pauseOnHover: false,\n\n      // When the notification appears, keep playing the audio\n      // Notification is set to autoclose in 5 seconds.\n      // After 5 seconds have passed and notification is closed, stop playing audio.\n      onOpen: () => {\n        this.audioRight.play();\n        setTimeout(()=>{\n        this.audioRight.pause();\n          this.setState({\n            hasDetected: false,\n            vestExistence: false,\n            helmetExistence: false,\n          });\n        }, 5000);\n      }\n    };\n\n    // We only want one notification max on the screen\n    // Only create notification if there's no other notification open\n    if ((this.state.helmetExistence === true && this.state.vestExistence === true) && !this.state.hasDetected){\n      this.setState({hasDetected: true});\n      toast.success(text, rightOptions);\n    }\n  }\n\n  // Draws predictions \n  renderPredictions (predictionBoxes, totalPredictions, predictionClasses, predictionScores){\n     const ctx = this.canvasRef.current.getContext('2d')                // get the context of canvas\n     ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)           // clear the canvas\n    if (!this.state.webcamStart) this.setState({webcamStart: true});    // draw results\n\n    // If the model isn't running, don't bother drawing.\n    if(this.state.run === false) return;\n\n    let vest = false;\n    let helmet = false;\n\n    // Go through all the predictions, look for a vest/helmet in the frame.\n    for (let i = 0; i < totalPredictions[0]; i++) {\n      const minY = predictionBoxes[i * 4] * this.state.height;\n      const minX = predictionBoxes[i * 4 + 1] * this.state.width;\n      const maxY = predictionBoxes[i * 4 + 2] * this.state.height;\n      const maxX = predictionBoxes[i * 4 + 3] * this.state.width;\n      const score = predictionScores[i * 3] * 100;\n      const item = classes[predictionClasses[i] - 1];\n      const predictionString = score.toFixed(1)+\" - \"+item.item;\n\n      // Only accept this prediction if its above our score treshold\n      if (score > 30) {        \n        if (item.hasOwnProperty('helmet') && item.helmet) {helmet = true};\n        if (item.hasOwnProperty('vest') && item.vest) {vest = true};\n\n        const color = item.color;\n        this.drawBox(minX, minY, maxX, maxY, color, predictionString);\n      }\n    }\n    \n    // If there's a helmet in the current frame\n    if (helmet){\n      this.setState({helmetExistence: true});\n      // Upon detecting a helmet, make it remember theres a helmet for 4 seconds\n      setTimeout(() => this.setState({helmetExistence: false}), 4000);\n    }\n\n    // If there is a vest in the current frame\n    if (vest){\n      this.setState({vestExistence: true});\n      setTimeout(() => this.setState({vestExistence: false}), 4000);\n    }\n\n    if (this.state.helmetExistence === true && this.state.vestExistence === true){\n      this.toast(\"ACCESS GRANTED!\", \"Welcome in!\");\n    }\n  };\n\n  // Draws a detection box by obtaining its coordinate, its color, and its corresponding text\n  drawBox(minX, minY, maxX, maxY, color, text){\n    const ctx = this.canvasRef.current.getContext('2d')\n    ctx.beginPath()\n    ctx.rect(minX, minY, maxX - minX, maxY - minY)\n    ctx.lineWidth = 4\n    ctx.strokeStyle = color;\n    ctx.stroke();\n\n    ctx.textBaseline = \"top\";\n    ctx.font = '16px sans-serif'\n    ctx.fillStyle = color;\n    const textWidth = ctx.measureText(text).width;\n    const textHeight = parseInt(ctx.font, 10); // base 10\n    ctx.fillRect(minX, minY, textWidth + 4, textHeight + 4);\n\n    ctx.shadowColor = 'white'\n    ctx.fillStyle = 'white';\n    ctx.fillText(text, minX, minY);\n  }\n\n  render() {\n    return (\n      <div> \n        <audio loop ref={r => this.audioRight = r}>\n          <source\n            src=\"https://freesound.org/data/previews/131/131660_2398403-lq.mp3\"\n            type=\"audio/mpeg\"\n          />\n        </audio>\n        <header>\n        \n        </header>\n        <ToastContainer />\n        <div className=\"video\">\n        <video\n            autoPlay\n            playsInline\n            muted\n            className=\"vid-and-canvas\"\n            ref={this.videoRef}\n            width={this.state.width}\n            height={this.state.height}\n          />\n          <canvas\n            className=\"vid-and-canvas\"\n            ref={this.canvasRef}\n            width={this.state.width}\n            height={this.state.height}\n          />\n        </div>\n        <div id=\"main-button-bar\">\n          {/* Display a loading wheel if model not ready to detect item*/ }\n          <Loader className=\"loader\" loaded={this.state.webcamStart && this.state.model} options={{color: this.state.model ? 'white' : 'black'}}>\n            <div className=\"main-btn-container\">\n              <PauseOutlinedIcon id=\"stop-btn\" className=\"main-btn\" onClick={this.stopModel} data-tip data-for=\"stop\" />\n              <PlayArrowIcon style={{display: 'none'}} id=\"start-btn\" className=\"main-btn\" onClick={this.startModel} data-tip data-for=\"start\" />\n            </div>\n            {/* ReactTooltip creates a small tooltip to buttons when hovered. */}\n            <ReactTooltip id=\"start\" place=\"top\" type=\"light\" effect=\"float\">\n              <span>Click on this button to start detection.</span>  \n            </ReactTooltip>\n            <ReactTooltip id=\"stop\" place=\"top\" type=\"light\" effect=\"float\">\n              <span>Click on this button to stop detection.</span>  \n            </ReactTooltip>\n          </Loader>\n          <div className=\"main-btn-container\"><HelpOutlineIcon id=\"help-btn\" className=\"main-btn\" data-tip data-for=\"help\" onClick={()=>{this.setState({help: true})}} /></div>\n          \n          <ReactTooltip id=\"help\" place=\"top\" type=\"light\" effect=\"float\">\n              <span>Click on this button if you need any help.</span>  \n            </ReactTooltip>\n\n          {/* Alert to be displayed when help button is clicked */}\n          <SweetAlert\n            id = \"alert-container\"\n            show={this.state.help}\n            title=\"Support\"\n            confirmButtonColor=\"#BECF41\"\n            html=\"<b>If the system is not running properly,<br />make sure to give the application access to your camera, and allow up to a minute to let the application load.<br/><br/>To test the application, have someone wearing a hard-hat and a vest appear on your camera and watch the model work!<br/><br/>The Pause/Play button can be used to stop/start detection.</b>\"\n            onConfirm={() => this.setState({ help: false })}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Detection;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage/HomePage'\nimport Detection from './pages/Detection/Detection'\n\nexport class App extends Component {\n  componentDidMount(){\n    document.title = \"PPE DETECTION AND ALERTING\";\n  }\n\n  render() {\n    // React-router helps to create links for each page. \n    return (\n      <Router>\n        <Switch>\n            <Route path=\"/detection\" exact component={HomePage} />\n            <Route path=\"/\" exact component={Detection} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      console.log(\"Hiiiiiiiiiiiii\"+ swUrl);\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nconsole.log(\"Hiiiiiiiiiiiii\"+ \"\");\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/construction.9ca91ca4.png\";","module.exports = __webpack_public_path__ + \"static/media/collaboration.2be78913.svg\";","module.exports = __webpack_public_path__ + \"static/media/logistics.b3a8def3.svg\";","module.exports = __webpack_public_path__ + \"static/media/ppe.3c986c87.png\";"],"sourceRoot":""}